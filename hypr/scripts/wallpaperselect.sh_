#!/usr/bin/env sh

# set variables
ScrDir=`dirname "$(realpath "$0")"`
RofiConf="${XDG_CONFIG_HOME:-$HOME/.config}/rofi/wallpaperselect.rasi"
wallPath="${XDG_CONFIG_HOME:-$HOME/.config}/swww"
thumbPath="${wallPath}/.thumbnails"

change_color_scheme=true
force_change_color_to_default=true

# Create thumbnail directory if it doesn't exist
mkdir -p "${thumbPath}"

# scale for monitor x res
x_monres=$(hyprctl -j monitors | jq '.[] | select(.focused==true) | .width')
monitor_scale=$(hyprctl -j monitors | jq '.[] | select (.focused == true) | .scale' | sed 's/\.//')
x_monres=$(( x_monres * 17 / monitor_scale ))

# set rofi override
elem_border=$(( hypr_border * 3 ))
r_override="element{border-radius:${elem_border}px;} listview{columns:6;spacing:100px;} element{padding:0px;orientation:vertical;} element-icon{size:${x_monres}px;border-radius:0px;} element-text{padding:20px;}"

# generate thumbnail if not exist (for GIFs)
generate_thumbnail() {
  local filepath="$1"
  local filename=$(basename "$filepath")
  local thumbfile="${thumbPath}/${filename%.*}.png"

  # Create a thumbnail if it doesn't already exist
  if [ ! -f "$thumbfile" ]; then
    ffmpeg -y -i "$filepath" -vf "thumbnail,scale=${x_monres}:-1" -frames:v 1 "$thumbfile" >/dev/null 2>&1
  fi

  echo "$thumbfile"
}

# launch rofi menu
RofiSel=$( find -L "${wallPath}" -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.gif" \) -exec basename {} \; | sort | while read rfile
do
  if [[ "$rfile" == *.gif ]]; then
    thumb=$(generate_thumbnail "${wallPath}/${rfile}")
    echo -en "$rfile\x00icon\x1f${thumb}\n"
  else
    echo -en "$rfile\x00icon\x1f${wallPath}/${rfile}\n"
  fi
done | rofi -dmenu -theme-str "${r_override}" -config "${RofiConf}" -select "${currentWall}")

# apply wallpaper
if [ ! -z "${RofiSel}" ] ; then
  selected="${wallPath}/${RofiSel}"

  swww img $selected \
    --transition-type "wipe" \
    --transition-duration 2

  rm "${wallPath}/current.set"
  rm "/usr/share/sddm/themes/corners/backgrounds/background.png"

  ln -s $selected "${wallPath}/current.set"
  ln -s $selected "/usr/share/sddm/themes/corners/backgrounds/background.png"

  # Check for accent color file
  if [ "$change_color_scheme" == true ]; then
	  accent_file="${wallPath}/${RofiSel%.*}_accent.txt"
	  if [ -f "$accent_file" ]; then
	    # Read the first line (the hex color)
	    accent_color=$(head -n 1 "$accent_file")
	    # accent_color=$(sed -n '1p' "$accent_file")
	    
	    # Call your script to change the accent color
	    $HOME/change-main-accent.sh "$accent_color"
	  else
		  if [ "$force_change_color_to_default" == true ]; then
		  	$HOME/change-main-accent.sh
		  fi
	  fi

	  if pgrep -x "dunst" > /dev/null; then
	  	dunstify "Changed Wallpaper to ${RofiSel}" -a "Wallpaper" -i "${wallPath}/${RofiSel}" -r 91190 -t 2200
	  else
	  	echo "dunst is not running, skipping notif"
	  fi
	fi
fi
